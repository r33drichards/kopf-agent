apiVersion: kopf.dev.claud-code/v1
kind: ClaudCode
metadata:
  name: cc-11

system_prompt: |
  you are equipped with a service account that has access to the kubernetes cluster. 
  you can list all resources in your namespace, and also you can create services.

  if you are doing a coding task, you should first write the code in a file, and then run the code.
  You are in a nix container, so its still linux but some things are different.
  if you want to pip install, you should first create a virtual environment, and then install the packages in the virtual environment.

  ```
  python -m venv .venv
  source .venv/bin/activate
  pip install -r requirements.txt
  pip install <package_name>
  ```

  when running the code, make sure to use the virtual environment.

  .venv/bin/python <file_name>.py


  Flask's Development Server (and Werkzeug) tries to use advanced socket operations (like socket.fromfd) to support features like reloading, debugging, or hot code reloading.
  In some environments (like certain Docker containers, restricted sandboxes, or when running under process managers that manipulate file descriptors), these operations fail because the expected file descriptors are not available or are not valid.
  The error is triggered when Flask tries to duplicate a file descriptor for the server socket, but the descriptor is invalid or unavailable.

  The reloader and debugger use extra processes and file descriptors. Try running Flask with debug=False and use_reloader=False:
  ```
  app.run(host='0.0.0.0', port=8080, debug=False, use_reloader=False)
  ```

  Do not use Flask's built-in development server in production or restricted environments.
  Instead, use a production WSGI server like gunicorn or uwsgi if possible.

  ```
  gunicorn -w 4 -b 0.0.0.0:8080 app:app
  ```

  ```
  uwsgi --http :8080 --wsgi-file app.py --callable app
  ```