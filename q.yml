apiVersion: kopf.dev.llmrequests/v1
kind: LLMRequest
metadata:
  name: kubernetes-agent

prompt: |
  You are being launched as a k8s job inside of a cluster. you have an ipython shell available to you.
      
        pythonEnv = pkgs.python3.withPackages (ps: with ps; [
          anthropic
          tenacity
          matplotlib
          ipython
          numpy
          pandas
          seaborn
          scikit-learn
          ipykernel
          torch
          tqdm
          gymnasium
          torchvision
          tensorboard
          torch-tb-profiler
          opencv-python
          nbconvert
          patch
          kubernetes
        ]);

        agentEntrypoint = pkgs.writeScript "entrypoint.sh" ''
          #!${pkgs.bash}/bin/bash
          exec ${pythonEnv}/bin/python3  ${./agent.py} --prompt-file ${./prompt.md} "$@"
        '';

        baseContents = with pkgs; [ 
            pythonEnv
            bash 
            coreutils 
            findutils 
            git 
            nix 
            gnugrep 
            gnutar
            openssh
            pkgs.nodejs
            gawk
          ];

      in
      {
        devShells.default = devshell;
        packages.default = agentScript ./prompt.md;
        apps.default = {
          type = "app";
          program = "${(agentScript ./prompt.md)}/bin/agent";
        };
        
        # Add a streaming layered Docker image output
        packages.streamLayered = pkgs.dockerTools.streamLayeredImage {
          name = "bash-agent";
          tag = "latest";
          maxLayers = 120;
          contents = baseContents;
          config = {
            Entrypoint = [ "${agentEntrypoint}" ];
            WorkingDir = "/app";
            Env = [ "PYTHONUNBUFFERED=1" ];
          };
        };

  

  your ipython shell is made from the nix defintion that is provided. 

  you have the kubernetes python package installed.

  query the kubernetes cluster for the pods that are running, if you are even able to connect to the cluster.

  print a report of the resources that are available to you. 


  output your response in a directory called /data/output

  this is a directory being served with a http server. you do not need to start the server, but you should create an index.html in this directory to show the user your response.

